[{"/home/cqlphp/Downloads/react-admin/adminpannel/src/index.js":"1","/home/cqlphp/Downloads/react-admin/adminpannel/src/App.js":"2","/home/cqlphp/Downloads/react-admin/adminpannel/src/Rounting/PrivateRoute.js":"3","/home/cqlphp/Downloads/react-admin/adminpannel/src/Rounting/PublicRoute.js":"4","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Auth/Login.js":"5","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Category/Category.js":"6","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Auth/Register/Register.js":"7","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Profile/Profile.js":"8","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/user/User_table.js":"9","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/cms/Editior.js":"10","/home/cqlphp/Downloads/react-admin/adminpannel/src/Rounting/Authentication.js":"11","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Layouts/Header.js":"12","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Layouts/Sidebar.js":"13","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/subCategory/SubCategory.js":"14","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Product/Product.js":"15","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Dashboard.js":"16"},{"size":197,"mtime":1631094758929,"results":"17","hashOfConfig":"18"},{"size":1923,"mtime":1633669410735,"results":"19","hashOfConfig":"18"},{"size":485,"mtime":1632824753433,"results":"20","hashOfConfig":"18"},{"size":428,"mtime":1632824652505,"results":"21","hashOfConfig":"18"},{"size":3760,"mtime":1631777904961,"results":"22","hashOfConfig":"18"},{"size":16446,"mtime":1633602017117,"results":"23","hashOfConfig":"18"},{"size":5606,"mtime":1632219853937,"results":"24","hashOfConfig":"18"},{"size":4779,"mtime":1632295899576,"results":"25","hashOfConfig":"18"},{"size":15485,"mtime":1633511972838,"results":"26","hashOfConfig":"18"},{"size":3324,"mtime":1632911450723,"results":"27","hashOfConfig":"18"},{"size":410,"mtime":1633676355313,"results":"28","hashOfConfig":"18"},{"size":3460,"mtime":1633671488661,"results":"29","hashOfConfig":"18"},{"size":1428,"mtime":1633419620873,"results":"30","hashOfConfig":"18"},{"size":18316,"mtime":1633684383723,"results":"31","hashOfConfig":"18"},{"size":20179,"mtime":1633684075651,"results":"32","hashOfConfig":"18"},{"size":4314,"mtime":1633684163378,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"i2iz4u",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/cqlphp/Downloads/react-admin/adminpannel/src/index.js",[],["74","75"],"/home/cqlphp/Downloads/react-admin/adminpannel/src/App.js",[],"/home/cqlphp/Downloads/react-admin/adminpannel/src/Rounting/PrivateRoute.js",[],"/home/cqlphp/Downloads/react-admin/adminpannel/src/Rounting/PublicRoute.js",["76"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLogin } from \"./Authentication\";\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() && restricted ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n\n\nconst obj = { a: 1, b: 2, c: 3}\n\n","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Auth/Login.js",["77","78"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Field, Formik, ErrorMessage, Form } from \"formik\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { login, isLogin } from \"../../Rounting/Authentication\";\n\nimport axios from \"axios\";\n\nconst Login = () => {\n  const [redirect, setRedirect] = useState(false);\n\n  const onSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      setSubmitting(false);\n      await axios.post(\"http://localhost:5050/signin\", values).then((res) => {\n        let data = res.data;\n        let user = res.data.user;\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        setRedirect(true);\n        resetForm({});\n      });\n    } catch (err) {\n      console.log(err.response);\n      toast.error(err.response.data.message);\n    }\n  };\n\n  return (\n    <>\n      {redirect && <Redirect to=\"/\" />}\n\n      <div className=\"login-box\">\n        <div className=\"login-logo\">\n          <Link to=\"/\">\n            <b>LOG</b>IN\n          </Link>\n        </div>\n        <div className=\"login-box-body\">\n          <p className=\"login-box-msg\">Sign in to start your session</p>\n\n          <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            validate={(values) => {\n              const errors = {};\n              if (!values.email) {\n                errors.email = \"Required\";\n              } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n              ) {\n                errors.email = \"Invalid email address\";\n              }\n              return errors;\n            }}\n            onSubmit={onSubmit}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                {isLogin() && <Redirect to=\"/\" />}\n\n                <div className=\"form-group has-feedback\">\n                  <Field\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                  />\n                  <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n                  <ErrorMessage name=\"email\" component=\"div\" />\n                </div>\n                <div className=\"form-group has-feedback\">\n                  <Field\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                  />\n                  <span className=\"glyphicon glyphicon-lock form-control-feedback\" />\n                  <ErrorMessage name=\"password\" component=\"div\" />\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-xs-8\">\n                    <div className=\"checkbox icheck\">\n                      <label>\n                        <input type=\"checkbox\" /> Remember Me\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"col-xs-4\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary btn-block btn-flat\"\n                      disabled={isSubmitting}\n                    >\n                      Sign In\n                    </button>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n\n          <a href=\"#\">I forgot my password</a>\n          <br />\n          <Link to=\"/signup\" className=\"text-center\">\n            Register a new membership\n          </Link>\n        </div>\n        <ToastContainer />\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Category/Category.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport ReactPaginate from \"react-paginate\";\nimport Header from \"../../Layouts/Header\";\nimport Sidebar from \"../../Layouts/Sidebar\";\nimport Toggle from \"react-toggle\";\nimport Swal from \"sweetalert2\";\nimport { useModal } from \"react-hooks-use-modal\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Toogle.css\";\nimport { add, values } from \"lodash\";\n\nconst Category = () => {\n  const [category, setcategory] = useState([]);\n  const [page, setPage] = useState(1);\n  const [dayvalue, setdayvalue] = useState();\n  const [modalType, setmodalType] = useState();\n  const [value, setvalues] = useState({\n    title: \"\",\n    image: \"\",\n  });\n\n  const [Modal, open, close, isOpen] = useModal(\"root\", {\n    preventScroll: true,\n    closeOnOverlayClick: false,\n  });\n  const openModal = (modaltype) => {\n    open();\n    setmodalType(modaltype);\n  };\n\n  const closeModal = (modaltype) => {\n    close();\n    setmodalType(\"\");\n  };\n\n  const getUserList = () => {\n    axios\n      .get(\n        `http://localhost:5050/category?current_page=${page.per_page}&per_page=${page.currentpage}`\n      )\n      .then((res) => {\n        console.log(res.data);\n        setPage(res.data);\n        setcategory(res.data.user);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const status = async (id) => {\n  //   console.log(id);\n  //   await axios.put(`http://localhost:5050/status/${id}`).then((res) => {\n  //     console.log(res);\n  //   });\n  // };\n\n  //handle change days\n  // const handleChangeDays = async (e, id) => {\n  //   const { name, value, checked } = e.target;\n  //   const status = await axios.put(`http://localhost:5050/status/${id}`, value);\n  //   console.log(status);\n  //   setcategory(value);\n  // };\n\n  // =======================add category===============================\n  const addcategory = useFormik({\n    initialValues: {\n      title: \"\",\n      image: \"\",\n    },\n\n    validationSchema: Yup.object({\n      title: Yup.string()\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      image: Yup.mixed().required(),\n    }),\n\n    onSubmit: async ({ resetForm, title, image }) => {\n      try {\n        // setSubmitting(false);\n        var formdata = new FormData();\n        formdata.append(\"title\", title);\n        formdata.append(\"image\", image);\n        const option = {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        };\n\n        await axios\n          .post(\"http://localhost:5050/category\", formdata, option)\n          .then((res) => {\n            setcategory((prev) => {\n              return [...prev, res.data];\n            });\n            close();\n            toast.success(\"Category Added Successfully\");\n          });\n      } catch (err) {\n        console.log(err);\n        toast.error(err.response.data.message);\n      }\n    },\n  });\n  //================Add category ends here===================//\n\n  //=============Edit Category=======================//\n  const edit = useFormik({\n    initialValues: value,\n    enableReinitialize: true,\n\n    validationSchema: Yup.object({\n      title: Yup.string()\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      image: Yup.mixed().required(),\n      // password: Yup.string().required(\"Please provide a valid password\"),\n    }),\n\n    onSubmit: async ({ title, image }) => {\n      try {\n        var formdata = new FormData();\n        formdata.append(\"title\", title);\n        formdata.append(\"image\", image);\n        const option = {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        };\n        await axios\n          .put(`http://localhost:5050/category/${value._id}`, formdata)\n          .then((res) => {\n            console.log(\"=========================\", res.data);\n\n            axios.get(\"http://localhost:5050/category\").then((res) => {\n              // console.log(res.data.user);\n              setcategory(res.data.user);\n\n              toast.success(\"Category Edited Successfully\");\n\n              // setdata(res.data);\n              close();\n            });\n          });\n      } catch (err) {\n        console.log(err);\n        toast.error(err.response.data.message);\n      }\n    },\n  });\n\n  //========================\n  const handleChangeDay = (e, id) => {\n    const { name, value, checked } = e.target;\n    toggleUpdate(id, checked);\n  };\n\n  async function toggleUpdate(id, checked) {\n    let data = {};\n    data[\"status\"] = checked;\n    await axios\n      .put(`http://localhost:5050/catstatus/${id}`, data)\n      .then((res) => {\n        console.log(res, \"======================================\");\n      });\n  }\n\n  //======================Edit Category button ==========\n\n  const onSubmit = async (id) => {\n    try {\n      console.log(id);\n      await axios.get(`http://localhost:5050/getcategory/${id}`).then((res) => {\n        //console.log(res.data, \")))))))))))))))))))))))))))))))))\");\n        setvalues(res.data);\n        openModal(\"edit\");\n       // edit.setFieldValue(\"title\", res.data.title);\n      });\n    } catch (err) {\n      // toast.error(err.res.data);\n      console.log(err);\n    }\n  };\n  //=======================delete button===========================\n  const category_delete = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n        axios\n          .delete(`http://localhost:5050/category/${id}`)\n          .then((res) => setcategory(res.data));\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n      }\n    });\n  };\n\n  // =====================================================================\n  useEffect(() => {\n    getUserList();\n  }, [setcategory]);\n\n  return (\n    <>\n      <Header />\n      <Sidebar />\n      <div className=\"content-wrapper\">\n        <div className=\"box\">\n          <div className=\"box-header\">\n            <h3 className=\"box-title\">Category</h3>\n            <i\n              class=\"fa fa-user-plus\"\n              // data-toggle=\"modal\"\n              //   data-target=\"#modal-info\"\n              style={{\n                float: \"right\",\n                padding: \"0px 42px 2px\",\n                fontSize: \"35px\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => openModal(\"add\")}\n            />\n          </div>\n\n          <div class=\"box-body\">\n            <table id=\"example1\" class=\"table table-bordered table-striped\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Image</th>\n                  <th>status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n\n              {category.map((data) => {\n                //console.log(data, \"=+++++=+++++++++++++++++++++++++++++\");\n                return (\n                  <tbody>\n                    <tr>\n                      <td>{data.title}</td>\n                      <td>\n                        <img\n                          src={`http://localhost:5050/images/${data.image}`}\n                          style={{ width: \"50px\" }}\n                        />\n                      </td>\n                      <td>\n                        <Toggle\n                          id=\"cheese-status\"\n                          name=\"status\"\n                          value={data.status}\n                          defaultChecked={data.status}\n                          // checked={data.status}\n                          onChange={(e) => handleChangeDay(e, data._id)}\n                        />\n                      </td>\n                      <td>\n                        <i\n                          class=\"fa fa-pencil-square-o\"\n                          style={{\n                            fontSize: \"27px\",\n                            marginRight: \"11px\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => onSubmit(data._id)}\n                        />\n                        <i\n                          class=\"fa fa-trash\"\n                          style={{ fontSize: \"27px\", cursor: \"pointer\" }}\n                          onClick={() => category_delete(data._id)}\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                );\n              })}\n\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={page.current_page}\n                onPageChange={() => setPage()}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n            </table>\n          </div>\n        </div>\n\n        {/* =================add category========================= */}\n        {modalType == \"add\" ? (\n          <Modal>\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <button type=\"button\" className=\"close\" onClick={close}>\n                    <span aria-hidden=\"true\">×</span>\n                  </button>\n                  <h4 className=\"modal-title\">Add Category</h4>\n                </div>\n                <div\n                  className=\"modal-body\"\n                  style={{\n                    height: \"286px\",\n                    backgroundColor: \"#d0d5d6 !important\",\n                  }}\n                >\n                  <form onSubmit={addcategory.handleSubmit}>\n                    <div className=\"form-group has-feedback\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Title\"\n                        id=\"title\"\n                        name=\"title\"\n                        onChange={addcategory.handleChange}\n                        onBlur={addcategory.handleBlur}\n                        value={addcategory.values.title}\n                      />\n                      {addcategory.touched.title && addcategory.errors.title ? (\n                        <div style={{ color: \"red\" }}>\n                          {addcategory.errors.tile}\n                        </div>\n                      ) : null}\n                      <span className=\"glyphicon glyphicon-user form-control-feedback\" />\n                    </div>\n                    <div className=\"form-group has-feedback\">\n                      <input\n                        type=\"file\"\n                        className=\"form-control\"\n                        placeholder=\"image\"\n                        id=\"image\"\n                        name=\"image\"\n                        onChange={(e) => {\n                          console.log(e.target.files[0]);\n                          addcategory.setFieldValue(\"image\", e.target.files[0]);\n                        }}\n                        onBlur={addcategory.handleBlur}\n                        value={addcategory.values.file}\n                      />\n                      {addcategory.touched.image && addcategory.errors.image ? (\n                        <div style={{ color: \"red\" }}>\n                          {addcategory.errors.image}\n                        </div>\n                      ) : null}\n                      <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n                    </div>\n                    <>\n                      <div className=\"col-xs-4\">\n                        <div className=\"pull-left\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block btn-flat\"\n                          >\n                            Submit\n                          </button>\n                        </div>\n                        <div className=\"pull-right\">\n                          {/* <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block btn-flat\"\n                            onClick={close}\n                          >\n                            Close\n                          </button> */}\n                        </div>\n                      </div>\n                    </>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n\n        {/* //==========================Edit Category=============== */}\n        {modalType == \"edit\" ? (\n          <Modal>\n            <div>\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      data-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                      onClick={close}\n                    >\n                      <span aria-hidden=\"true\">×</span>\n                    </button>\n                    <h4 className=\"modal-title\">Edit Category</h4>\n                  </div>\n                  <div className=\"modal-body\" style={{ height: \"286px\" }}>\n                    <form onSubmit={edit.handleSubmit}>\n                      <div className=\"form-group has-feedback\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Title\"\n                          id=\"title\"\n                          name=\"title\"\n                          onChange={edit.handleChange}\n                          onBlur={edit.handleBlur}\n                          value={edit.values.title}\n                        />\n                        {edit.touched.title && edit.errors.title ? (\n                          <div style={{ color: \"red\" }}>\n                            {edit.errors.title}\n                          </div>\n                        ) : null}\n                        <span className=\"glyphicon glyphicon-user form-control-feedback\" />\n                      </div>\n                      <div className=\"form-group has-feedback\">\n                        <input\n                          type=\"file\"\n                          className=\"form-control\"\n                          placeholder=\"image\"\n                          id=\"image\"\n                          name=\"image\"\n                          onChange={(e) => {\n                            // console.log(e.target.files[0]);\n                            edit.setFieldValue(\"image\", e.target.files[0]);\n                          }}\n                          onBlur={edit.handleBlur}\n                          // value={edit.values.image}\n                        />\n                        {edit.touched.image && edit.errors.image ? (\n                          <div style={{ color: \"red\" }}>\n                            {edit.errors.image}\n                          </div>\n                        ) : null}\n                        <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n                      </div>\n                      <>\n                        <div className=\"col-xs-4\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block btn-flat\"\n                          >\n                            Edit User\n                          </button>\n                        </div>\n                      </>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Category;\n","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Auth/Register/Register.js",["93"],"import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport axios from \"axios\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { isLogin } from \"../../../Rounting/Authentication\";\n\nfunction Register() {\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string()\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string().required(\"Please provide a valid password\"),\n      confirm_password: Yup.string().when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Both password need to be the same\"\n        ),\n      }),\n    }),\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\n      try {\n        setSubmitting(false);\n        await axios\n          .post(\"http://localhost:5050/register\", values)\n          .then((res) => {\n            localStorage.setItem(\"token\", JSON.stringify(res.data.token));\n            localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n            resetForm({});\n          });\n      } catch (err) {\n        toast.error(err.response.data);\n      }\n    },\n  });\n  return (\n    <div className=\"register-box\">\n      <div className=\"register-logo\" style={{ margin: \"0px\" }}>\n        {isLogin() && <Redirect to=\"/\" />}\n        <Link to=\"#\">\n          <b>SIGN</b>UP\n        </Link>\n      </div>\n      <div className=\"register-box-body\">\n        <p className=\"login-box-msg\">Register a new membership</p>\n        <form onSubmit={formik.handleSubmit}>\n          <div className=\"form-group has-feedback\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Full name\"\n              id=\"fullName\"\n              name=\"fullName\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.fullName}\n            />\n            {formik.touched.fullName && formik.errors.fullName ? (\n              <div style={{ color: \"red\" }}>{formik.errors.fullName}</div>\n            ) : null}\n            <span className=\"glyphicon glyphicon-user form-control-feedback\" />\n          </div>\n          <div className=\"form-group has-feedback\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div style={{ color: \"red\" }}>{formik.errors.email}</div>\n            ) : null}\n            <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n          </div>\n          <div className=\"form-group has-feedback\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div style={{ color: \"red\" }}>{formik.errors.password}</div>\n            ) : null}\n            <span className=\"glyphicon glyphicon-lock form-control-feedback\" />\n          </div>\n          <div className=\"form-group has-feedback\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Retype password\"\n              id=\"confirm_password\"\n              name=\"confirm_password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.confirm_password}\n            />\n            {formik.touched.confirm_password &&\n            formik.errors.confirm_password ? (\n              <div style={{ color: \"red\" }}>\n                {formik.errors.confirm_password}\n              </div>\n            ) : null}\n            <span className=\"glyphicon glyphicon-log-in form-control-feedback\" />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-8\"></div>\n\n            <div className=\"col-xs-4\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block btn-flat\"\n              >\n                Register\n              </button>\n            </div>\n          </div>\n        </form>\n        {/* <div className=\"social-auth-links text-center\">\n          <p>- OR -</p>\n          <Link\n            to=\"#\"\n            className=\"btn btn-block btn-social btn-facebook btn-flat\"\n          >\n            <i className=\"fa fa-facebook\" /> Sign up using Facebook\n          </Link>\n          <Link to=\"#\" className=\"btn btn-block btn-social btn-google btn-flat\">\n            <i className=\"fa fa-google-plus\" /> Sign up using Google+\n          </Link>\n        </div> */}\n        <Link to=\"/login\" className=\"text-center\">\n          I already have a membership\n        </Link>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Register;\n","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Profile/Profile.js",["94","95","96","97","98","99","100","101","102","103","104","105","106"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../../Layouts/Header\";\nimport Sidebar from \"../../Layouts/Sidebar\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from \"formik\";\nimport { getItems } from \"../../../Rounting/Authentication\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Profile = () => {\n  const [values, setvalues] = useState({\n    fullName: \"\",\n    email: \"\",\n  });\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`http://localhost:5050/users/${getItems()._id}`, values)\n        .then((res) => {\n          setvalues(res.data);\n          editUser.setFieldValue(\"fullName\", res.data.fullName);\n          editUser.setFieldValue(\"email\", res.data.email);\n        });\n    } catch (err) {\n      console.log(err.response);\n    }\n  }, [setvalues]);\n\n  const editUser = useFormik({\n    initialValues: values,\n    validationSchema: Yup.object({\n      fullName: Yup.string()\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n    }),\n    onSubmit: async (values, { setSubmitting }) => {\n      try {\n        setSubmitting(false);\n        await axios\n          .put(`http://localhost:5050/users/${getItems()._id}`, values)\n          .then((res) => {\n            setvalues(res.data);\n          });\n      } catch (err) {\n        toast.error(err.response.data);\n      }\n    },\n  });\n\n  return (\n    <div>\n      <Header value={values.fullName} />\n      <Sidebar />\n      <div\n        className=\"box box-primary\"\n        style={{\n          width: \"500px\",\n          marginTop: \"77px\",\n          border: \"1px solid green\",\n          padding: \"18px\",\n          float: \"right\",\n          marginRight: \"31px\",\n        }}\n      >\n        <div className=\"box-body box-profile\">\n          <img\n            className=\"profile-user-img img-responsive img-circle\"\n            src=\"assest/Images/avatar5.png\"\n            alt=\"User profile picture\"\n          />\n          <h3 className=\"profile-username text-center\">{values.fullName}</h3>\n          <p className=\"text-muted text-center\">React Speciallist</p>\n          <ul className=\"list-group list-group-unbordered\">\n            <li className=\"list-group-item\">\n              <b>{values.fullName}</b> <a className=\"pull-right\"></a>\n            </li>\n            <li className=\"list-group-item\">\n              <b>{values.email}</b> <a className=\"pull-right\"></a>\n            </li>\n            <li className=\"list-group-item\">\n              <b>123456789</b> <a className=\"pull-right\"></a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div\n        className=\"nav-tabs-custom\"\n        style={{\n          width: \"500px\",\n          marginTop: \"77px\",\n          border: \"1px solid green\",\n          padding: \"18px\",\n          float: \"right\",\n          marginRight: \"31px\",\n        }}\n      >\n        <h2> Update Profile</h2>\n        <form onSubmit={editUser.handleSubmit}>\n          <div className=\"form-group has-feedback\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Full name\"\n              id=\"fullName\"\n              name=\"fullName\"\n              onChange={editUser.handleChange}\n              onBlur={editUser.handleBlur}\n              value={editUser.values.fullName}\n            />\n            {editUser.touched.fullName && editUser.errors.fullName ? (\n              <div style={{ color: \"red\" }}>{editUser.errors.fullName}</div>\n            ) : null}\n            <span className=\"glyphicon glyphicon-user form-control-feedback\" />\n          </div>\n          <div className=\"form-group has-feedback\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={editUser.handleChange}\n              onBlur={editUser.handleBlur}\n              value={editUser.values.email}\n            />\n            {editUser.touched.email && editUser.errors.email ? (\n              <div style={{ color: \"red\" }}>{editUser.errors.email}</div>\n            ) : null}\n            <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n          </div>\n          <>\n            <div className=\"col-xs-4\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block btn-flat\"\n              >\n                Update User\n              </button>\n            </div>\n          </>\n        </form>\n\n        <ToastContainer />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/user/User_table.js",["107","108","109","110","111","112","113","114","115","116","117"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { getItems } from \"../../../Rounting/Authentication\";\nimport Header from \"../../Layouts/Header\";\nimport Sidebar from \"../../Layouts/Sidebar\";\nimport Swal from \"sweetalert2\";\nimport ReactPaginate from \"react-paginate\";\nimport { useModal } from \"react-hooks-use-modal\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst PER_PAGE = 5;\n\nconst User_table = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [data, setdata] = useState([]);\n\n  const [value, setvalues] = useState({\n    fullName: \"\",\n    email: \"\",\n  });\n\n  const [Modal, open, close, isOpen] = useModal(\"root\", {\n    preventScroll: true,\n    closeOnOverlayClick: false,\n  });\n\n  const openModal = (modaltype) => {\n    open();\n    setmodalType(modaltype);\n  };\n\n  const closeModal = (modaltype) => {\n    close();\n    setmodalType(\"\");\n  };\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  const offset = currentPage * PER_PAGE;\n  //======================react pagination =====================//\n  const currentPageData = data.slice(offset, offset + PER_PAGE).map((user) => {\n    console.log(\"######################\", user);\n    return (\n      <tr>\n        <td>{user._id}</td>\n        <td>{user.fullName}</td>\n        <td>{user.email}</td>\n        <td>\n          <i\n            class=\"fa fa-pencil-square-o\"\n            style={{\n              fontSize: \"27px\",\n              marginRight: \"11px\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => onSubmit(user._id)}\n          />\n\n          <i\n            class=\"fa fa-trash\"\n            style={{ fontSize: \"27px\", cursor: \"pointer\" }}\n            onClick={() => user_delete(user._id)}\n          />\n        </td>\n      </tr>\n    );\n  });\n\n  const pageCount = Math.ceil(data.length / PER_PAGE);\n\n  const [modalType, setmodalType] = useState();\n\n  // const modal = () => {\n  //   if (modalType == 1) {\n  //     return setmodalType == edit;\n  //   } else {\n  //     return setmodalType == formik;\n  //   }\n  // };\n\n  //============================delete user=======================//\n  useEffect(() => {\n    axios.get(\"http://localhost:5050/users/\").then((res) => {\n      // console.log(res.data);\n      setdata(res.data);\n    });\n  }, []);\n  //==================================delete button ==============================\n  const user_delete = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n        axios\n          .delete(`http://localhost:5050/users/${id}`)\n          .then((res) => setdata(res.data));\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n      }\n    });\n  };\n  //==============================delete Button ends ========================//\n\n  //===============Edit Button ========================//\n  const onSubmit = async (id) => {\n    try {\n      console.log(id);\n      await axios.get(`http://localhost:5050/users/${id}`).then((res) => {\n        // console.log(res.data);\n        setvalues(res.data);\n        openModal(\"edit\");\n        edit.setFieldValue(\"fullName\", res.data.fullName);\n        edit.setFieldValue(\"email\", res.data.email);\n      });\n    } catch (err) {\n      // toast.error(err.res.data);\n      console.log(err);\n    }\n  };\n\n  //==============================Edit Button ends ========================//\n\n  //=========================================Add user==============================//\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string()\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string().required(\"Please provide a valid password\"),\n    }),\n\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\n      try {\n        setSubmitting(false);\n        await axios.post(\"http://localhost:5050/users\", values).then((res) => {\n          setdata((prev) => {\n            return [...prev, res.data];\n          });\n          resetForm({});\n          close();\n          toast.success(\"User Added Successfully\");\n        });\n      } catch (err) {\n        console.log(err);\n        toast.error(err.response.data.message);\n      }\n    },\n  });\n  //====================Edit ==================================//\n  const edit = useFormik({\n    initialValues: value,\n\n    validationSchema: Yup.object({\n      fullName: Yup.string()\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      // password: Yup.string().required(\"Please provide a valid password\"),\n    }),\n\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\n      try {\n        setSubmitting(false);\n        console.log(\"values\", value);\n\n        await axios\n          .put(`http://localhost:5050/users/${value._id}`, values)\n          .then((res) => {\n            console.log(\"=========================\", res.data);\n\n            axios.get(\"http://localhost:5050/users/\").then((res) => {\n              // console.log(res.data);\n              setdata(res.data);\n\n              toast.success(\"User Edited Successfully\");\n\n              // setdata(res.data);\n              close();\n              resetForm({});\n            });\n          });\n      } catch (err) {\n        console.log(err);\n        toast.error(\"User not edited\");\n      }\n    },\n  });\n  //=====================Edit button ends here=======================//\n  console.log(\"MODAL TYPE\", modalType);\n  return (\n    <div>\n      <Header />\n      <Sidebar />\n      <div className=\"content-wrapper\">\n        <div className=\"box\">\n          <div className=\"box-header\">\n            <h3 className=\"box-title\">USER Data Table</h3>\n            <i\n              class=\"fa fa-user-plus\"\n              data-toggle=\"modal\"\n              data-target=\"#modal-info\"\n              style={{\n                float: \"right\",\n                padding: \"0px 42px 2px\",\n                fontSize: \"35px\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => openModal(\"add\")}\n            />\n          </div>\n\n          <div class=\"box-body\">\n            <table id=\"example1\" class=\"table table-bordered table-striped\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Full Name</th>\n                  <th>Email</th>\n\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentPageData}\n                <ReactPaginate\n                  previousLabel={\"← Previous\"}\n                  nextLabel={\"Next →\"}\n                  pageCount={pageCount}\n                  onPageChange={handlePageClick}\n                  containerClassName={\"pagination\"}\n                  previousLinkClassName={\"pagination__link\"}\n                  nextLinkClassName={\"pagination__link\"}\n                  disabledClassName={\"pagination__link--disabled\"}\n                  activeClassName={\"pagination__link--active\"}\n                />\n              </tbody>\n            </table>\n          </div>\n        </div>\n        {/* ======================== Edit USER============================================ */}\n\n        {modalType == \"edit\" ? (\n          <Modal>\n            <div>\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      data-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                      onClick={close}\n                    >\n                      <span aria-hidden=\"true\">×</span>\n                    </button>\n                    <h4 className=\"modal-title\">Edit Form</h4>\n                  </div>\n                  <div className=\"modal-body\" style={{ height: \"286px\" }}>\n                    <form onSubmit={edit.handleSubmit}>\n                      <div className=\"form-group has-feedback\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Full name\"\n                          id=\"fullName\"\n                          name=\"fullName\"\n                          onChange={edit.handleChange}\n                          onBlur={edit.handleBlur}\n                          value={edit.values.fullName}\n                        />\n                        {edit.touched.fullName && edit.errors.fullName ? (\n                          <div style={{ color: \"red\" }}>\n                            {edit.errors.fullName}\n                          </div>\n                        ) : null}\n                        <span className=\"glyphicon glyphicon-user form-control-feedback\" />\n                      </div>\n                      <div className=\"form-group has-feedback\">\n                        <input\n                          type=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Email\"\n                          id=\"email\"\n                          name=\"email\"\n                          type=\"text\"\n                          onChange={edit.handleChange}\n                          onBlur={edit.handleBlur}\n                          value={edit.values.email}\n                        />\n                        {edit.touched.email && edit.errors.email ? (\n                          <div style={{ color: \"red\" }}>\n                            {edit.errors.email}\n                          </div>\n                        ) : null}\n                        <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n                      </div>\n                      <>\n                        <div className=\"col-xs-4\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block btn-flat\"\n                          >\n                            Edit User\n                          </button>\n                        </div>\n                      </>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n        {/*================================= Add User ======================================== */}\n        {modalType == \"add\" ? (\n          <Modal>\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <button type=\"button\" className=\"close\" onClick={close}>\n                    <span aria-hidden=\"true\">×</span>\n                  </button>\n                  <h4 className=\"modal-title\">Add User</h4>\n                </div>\n                <div\n                  className=\"modal-body\"\n                  style={{\n                    height: \"286px\",\n                    backgroundColor: \"#d0d5d6 !important\",\n                  }}\n                >\n                  <form onSubmit={formik.handleSubmit}>\n                    <div className=\"form-group has-feedback\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Full name\"\n                        id=\"fullName\"\n                        name=\"fullName\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.fullName}\n                      />\n                      {formik.touched.fullName && formik.errors.fullName ? (\n                        <div style={{ color: \"red\" }}>\n                          {formik.errors.fullName}\n                        </div>\n                      ) : null}\n                      <span className=\"glyphicon glyphicon-user form-control-feedback\" />\n                    </div>\n                    <div className=\"form-group has-feedback\">\n                      <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Email\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"text\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                      />\n                      {formik.touched.email && formik.errors.email ? (\n                        <div style={{ color: \"red\" }}>\n                          {formik.errors.email}\n                        </div>\n                      ) : null}\n                      <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n                    </div>\n                    <div className=\"form-group has-feedback\">\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        id=\"password\"\n                        name=\"password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                      />\n                      {formik.touched.password && formik.errors.password ? (\n                        <div style={{ color: \"red\" }}>\n                          {formik.errors.password}\n                        </div>\n                      ) : null}\n                      <span className=\"glyphicon glyphicon-lock form-control-feedback\" />\n                    </div>\n                    <>\n                      <div className=\"col-xs-4\">\n                        <div className=\"pull-left\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block btn-flat\"\n                          >\n                            Add User\n                          </button>\n                        </div>\n                        <div className=\"pull-right\">\n                          {/* <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block btn-flat\"\n                            onClick={close}\n                          >\n                            Close\n                          </button> */}\n                        </div>\n                      </div>\n                    </>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default User_table;\n","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/cms/Editior.js",[],"/home/cqlphp/Downloads/react-admin/adminpannel/src/Rounting/Authentication.js",[],"/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Layouts/Header.js",["118","119","120","121","122","123"],"/home/cqlphp/Downloads/react-admin/adminpannel/src/views/Layouts/Sidebar.js",["124","125"],"import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { getItems } from \"../../Rounting/Authentication\";\n\nfunction Sidebar() {\n  return (\n    <div>\n      <aside className=\"main-sidebar\">\n        <section className=\"sidebar\">\n          <div className=\"user-panel\"></div>\n\n          <ul className=\"sidebar-menu\">\n            <li className=\"header\">MAIN NAVIGATION</li>\n            <li className=\"active treeview\">\n              <Link to=\"/\">\n                <i className=\"fa fa-dashboard\" /> <span>Dashboard</span>\n              </Link>\n\n              <Link to=\"/usertable\">\n                <i className=\"fa fa-user\" /> <span>USER</span>\n              </Link>\n\n              <Link to=\"/category\">\n                <i class=\"fa fa-list-alt\" aria-hidden=\"true\" />\n                <span> Category</span>\n              </Link>\n              <Link to=\"/subcategory\">\n                <i class=\"fa fa-list-alt\" aria-hidden=\"true\" />\n                <span> Sub Category</span>\n              </Link>\n\n              <Link to=\"/product\">\n                <i class=\"fa fa-product-hunt\" aria-hidden=\"true\" />\n                <span> Product</span>\n              </Link>\n\n              <Link to=\"/Editior\">\n                <i class=\"fa fa-grav\" aria-hidden=\"true\" /> <span>CMS</span>\n              </Link>\n            </li>\n          </ul>\n        </section>\n      </aside>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/subCategory/SubCategory.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Product/Product.js",["140","141","142","143","144","145","146","147","148","149","150"],"/home/cqlphp/Downloads/react-admin/adminpannel/src/views/pages/Dashboard.js",["151","152","153","154","155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":19,"column":7,"nodeType":"162","messageId":"163","endLine":19,"endColumn":10},{"ruleId":"160","severity":1,"message":"164","line":6,"column":10,"nodeType":"162","messageId":"163","endLine":6,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":105,"column":11,"nodeType":"167","endLine":105,"endColumn":23},{"ruleId":"160","severity":1,"message":"168","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":17},{"ruleId":"160","severity":1,"message":"169","line":15,"column":10,"nodeType":"162","messageId":"163","endLine":15,"endColumn":13},{"ruleId":"160","severity":1,"message":"170","line":15,"column":15,"nodeType":"162","messageId":"163","endLine":15,"endColumn":21},{"ruleId":"160","severity":1,"message":"171","line":20,"column":10,"nodeType":"162","messageId":"163","endLine":20,"endColumn":18},{"ruleId":"160","severity":1,"message":"172","line":20,"column":20,"nodeType":"162","messageId":"163","endLine":20,"endColumn":31},{"ruleId":"160","severity":1,"message":"173","line":27,"column":30,"nodeType":"162","messageId":"163","endLine":27,"endColumn":36},{"ruleId":"160","severity":1,"message":"174","line":36,"column":9,"nodeType":"162","messageId":"163","endLine":36,"endColumn":19},{"ruleId":"160","severity":1,"message":"175","line":130,"column":15,"nodeType":"162","messageId":"163","endLine":130,"endColumn":21},{"ruleId":"160","severity":1,"message":"176","line":157,"column":13,"nodeType":"162","messageId":"163","endLine":157,"endColumn":17},{"ruleId":"160","severity":1,"message":"177","line":157,"column":19,"nodeType":"162","messageId":"163","endLine":157,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":212,"column":6,"nodeType":"180","endLine":212,"endColumn":19,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":254,"column":25,"nodeType":"167","endLine":257,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":306,"column":20,"nodeType":"186","messageId":"187","endLine":306,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":394,"column":20,"nodeType":"186","messageId":"187","endLine":394,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":82,"column":15,"nodeType":"190","endLine":82,"endColumn":26},{"ruleId":"160","severity":1,"message":"191","line":6,"column":10,"nodeType":"162","messageId":"163","endLine":6,"endColumn":16},{"ruleId":"160","severity":1,"message":"192","line":6,"column":18,"nodeType":"162","messageId":"163","endLine":6,"endColumn":22},{"ruleId":"160","severity":1,"message":"193","line":6,"column":24,"nodeType":"162","messageId":"163","endLine":6,"endColumn":29},{"ruleId":"160","severity":1,"message":"194","line":6,"column":31,"nodeType":"162","messageId":"163","endLine":6,"endColumn":43},{"ruleId":"178","severity":1,"message":"195","line":29,"column":6,"nodeType":"180","endLine":29,"endColumn":17,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":69,"column":11,"nodeType":"167","endLine":73,"endColumn":13},{"ruleId":"199","severity":1,"message":"200","line":78,"column":40,"nodeType":"167","endLine":78,"endColumn":66},{"ruleId":"165","severity":1,"message":"201","line":78,"column":40,"nodeType":"167","endLine":78,"endColumn":66},{"ruleId":"199","severity":1,"message":"200","line":81,"column":37,"nodeType":"167","endLine":81,"endColumn":63},{"ruleId":"165","severity":1,"message":"201","line":81,"column":37,"nodeType":"167","endLine":81,"endColumn":63},{"ruleId":"199","severity":1,"message":"200","line":84,"column":32,"nodeType":"167","endLine":84,"endColumn":58},{"ruleId":"165","severity":1,"message":"201","line":84,"column":32,"nodeType":"167","endLine":84,"endColumn":58},{"ruleId":"188","severity":1,"message":"189","line":125,"column":15,"nodeType":"190","endLine":125,"endColumn":26},{"ruleId":"160","severity":1,"message":"191","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":16},{"ruleId":"160","severity":1,"message":"192","line":3,"column":18,"nodeType":"162","messageId":"163","endLine":3,"endColumn":22},{"ruleId":"160","severity":1,"message":"193","line":3,"column":24,"nodeType":"162","messageId":"163","endLine":3,"endColumn":29},{"ruleId":"160","severity":1,"message":"194","line":3,"column":31,"nodeType":"162","messageId":"163","endLine":3,"endColumn":43},{"ruleId":"160","severity":1,"message":"202","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":18},{"ruleId":"160","severity":1,"message":"173","line":25,"column":30,"nodeType":"162","messageId":"163","endLine":25,"endColumn":36},{"ruleId":"160","severity":1,"message":"174","line":35,"column":9,"nodeType":"162","messageId":"163","endLine":35,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":260,"column":20,"nodeType":"186","messageId":"187","endLine":260,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":304,"column":27,"nodeType":"190","endLine":304,"endColumn":38},{"ruleId":"184","severity":1,"message":"185","line":336,"column":20,"nodeType":"186","messageId":"187","endLine":336,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":379,"column":25,"nodeType":"190","endLine":379,"endColumn":36},{"ruleId":"160","severity":1,"message":"203","line":3,"column":26,"nodeType":"162","messageId":"163","endLine":3,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":42,"column":11,"nodeType":"167","endLine":47,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":56,"column":17,"nodeType":"167","endLine":56,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":57,"column":19,"nodeType":"167","endLine":61,"endColumn":21},{"ruleId":"197","severity":1,"message":"198","line":67,"column":21,"nodeType":"167","endLine":71,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":94,"column":17,"nodeType":"167","endLine":94,"endColumn":59},{"ruleId":"160","severity":1,"message":"204","line":2,"column":16,"nodeType":"162","messageId":"163","endLine":2,"endColumn":23},{"ruleId":"160","severity":1,"message":"202","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":18},{"ruleId":"160","severity":1,"message":"168","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":17},{"ruleId":"160","severity":1,"message":"205","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":14},{"ruleId":"160","severity":1,"message":"169","line":17,"column":10,"nodeType":"162","messageId":"163","endLine":17,"endColumn":13},{"ruleId":"160","severity":1,"message":"170","line":17,"column":15,"nodeType":"162","messageId":"163","endLine":17,"endColumn":21},{"ruleId":"160","severity":1,"message":"173","line":46,"column":30,"nodeType":"162","messageId":"163","endLine":46,"endColumn":36},{"ruleId":"160","severity":1,"message":"174","line":56,"column":9,"nodeType":"162","messageId":"163","endLine":56,"endColumn":19},{"ruleId":"160","severity":1,"message":"206","line":75,"column":9,"nodeType":"162","messageId":"163","endLine":75,"endColumn":21},{"ruleId":"160","severity":1,"message":"176","line":81,"column":13,"nodeType":"162","messageId":"163","endLine":81,"endColumn":17},{"ruleId":"160","severity":1,"message":"177","line":81,"column":19,"nodeType":"162","messageId":"163","endLine":81,"endColumn":24},{"ruleId":"160","severity":1,"message":"175","line":159,"column":15,"nodeType":"162","messageId":"163","endLine":159,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":236,"column":6,"nodeType":"180","endLine":236,"endColumn":19,"suggestions":"207"},{"ruleId":"182","severity":1,"message":"183","line":278,"column":25,"nodeType":"167","endLine":281,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":329,"column":20,"nodeType":"186","messageId":"187","endLine":329,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":432,"column":20,"nodeType":"186","messageId":"187","endLine":432,"endColumn":22},{"ruleId":"160","severity":1,"message":"168","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":17},{"ruleId":"160","severity":1,"message":"173","line":35,"column":30,"nodeType":"162","messageId":"163","endLine":35,"endColumn":36},{"ruleId":"160","severity":1,"message":"174","line":56,"column":9,"nodeType":"162","messageId":"163","endLine":56,"endColumn":19},{"ruleId":"160","severity":1,"message":"206","line":74,"column":9,"nodeType":"162","messageId":"163","endLine":74,"endColumn":21},{"ruleId":"160","severity":1,"message":"176","line":80,"column":13,"nodeType":"162","messageId":"163","endLine":80,"endColumn":17},{"ruleId":"160","severity":1,"message":"177","line":80,"column":19,"nodeType":"162","messageId":"163","endLine":80,"endColumn":24},{"ruleId":"160","severity":1,"message":"175","line":172,"column":15,"nodeType":"162","messageId":"163","endLine":172,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":244,"column":6,"nodeType":"180","endLine":244,"endColumn":19,"suggestions":"208"},{"ruleId":"182","severity":1,"message":"183","line":285,"column":25,"nodeType":"167","endLine":288,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":338,"column":20,"nodeType":"186","messageId":"187","endLine":338,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":453,"column":20,"nodeType":"186","messageId":"187","endLine":453,"endColumn":22},{"ruleId":"160","severity":1,"message":"209","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":18},{"ruleId":"160","severity":1,"message":"210","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":17},{"ruleId":"178","severity":1,"message":"211","line":15,"column":13,"nodeType":"212","endLine":32,"endColumn":4},{"ruleId":"165","severity":1,"message":"166","line":47,"column":15,"nodeType":"167","endLine":47,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":52,"column":15,"nodeType":"167","endLine":52,"endColumn":27},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'obj' is assigned a value but never used.","Identifier","unusedVar","'login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DataTable' is defined but never used.","'add' is defined but never used.","'values' is defined but never used.","'dayvalue' is assigned a value but never used.","'setdayvalue' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'closeModal' is assigned a value but never used.","'option' is assigned a value but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserList'. Either include it or remove the dependency array.","ArrayExpression",["215"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'editUser' and 'values'. Either include them or remove the dependency array.",["216"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getItems' is defined but never used.","'useHistory' is defined but never used.","'NavLink' is defined but never used.","'Select' is defined but never used.","'handleChange' is assigned a value but never used.",["217"],["218"],"'Redirect' is defined but never used.","'isLogin' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"219","fix":"223"},{"desc":"219","fix":"224"},"Update the dependencies array to be: [getUserList, setcategory]",{"range":"225","text":"226"},"Update the dependencies array to be: [editUser, setvalues, values]",{"range":"227","text":"228"},{"range":"229","text":"226"},{"range":"230","text":"226"},[6252,6265],"[getUserList, setcategory]",[905,916],"[editUser, setvalues, values]",[6881,6894],[7181,7194]]